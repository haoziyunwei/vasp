install
graphical
cdrom
lang en_US.UTF-8
keyboard us
network  --bootproto=static --device=eth0 --gateway=192.168.1.1 --ip=192.168.1.10 --netmask=255.255.255.0 --onboot=on  
rootpw --iscrypted $1$VSmile07$5GGzc6ESSI.JkRUE1aOdd0
authconfig --enableshadow --passalgo=sha512
firewall --disabled
selinux --disabled
timezone --utc Asia/Shanghai
bootloader --location=mbr --append="crashkernel=auto rhgb quiet"
#zerombr
#clearpart --all --initlabel   
#clearpart --all –initlabel    
part /boot --fstype=ext4 --size=300
part / --fstype=ext4 --grow --size=17000  
part swap --grow --maxsize=1984 --size=1984
reboot

%packages --nobase
@base
%end

%post
mkdir -p /usr/bin/vasp/
touch /usr/bin/vasp/create_local_yum.sh
touch /usr/bin/vasp/generate_ssh.sh
touch /usr/bin/vasp/jiaohu.sh
touch /usr/bin/vasp/mysql_start.sh
touch /usr/bin/vasp/update_master.sh
cat >>/usr/bin/vasp/create_local_yum.sh <<EOF
#!/bin/bash
iso_path=/dev/sr0
echo "Iso file path is :" /dev/sr0
yum_path=/mnt/vrv/
echo 'Creating mount directory :' /mnt/vrv
mkdir -p /mnt/vrv/
mount /dev/sr0 /mnt/vrv
echo 'Updating /etc/yum.repos.d/ files...'
rm -rf /etc/yum.repos.d/*
touch /etc/yum.repos.d/vrv.repo
echo "
[vrv-local]
name=vrv-local
baseurl=file:///mnt/vrv
gpgcheck=0
enabled=1
" >> /etc/yum.repos.d/vrv.repo
yum clean all && echo 'yum repository has been updated! '
host_ip=\`/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '{print \$2}'|tr -d "addr:"\`
echo "\$host_ip vasp-manager" >>/usr/bin/vasp/hosts
#echo "\$host_ip vasp-manager" >>/etc/hosts
EOF
%end
%post
cat >>/usr/bin/vasp/jiagu.sh <<EOF
#!/bin/sh
# desc: setup linux system security
sed -i -e "s/PASS_MAX_DAYS.*\$/PASS_MAX_DAYS  90/" -e "s/PASS_MIN_LEN.*\$/PASS_MIN_LEN 8/"  /etc/login.defs  
echo "TMOUT=300" >>/etc/profile

# will system save history command list to 10
sed -i "s/HISTSIZE=1000/HISTSIZE=10/" /etc/profile

# enable /etc/profile go!
source /etc/profile

# add syncookie enable /etc/sysctl.conf
echo "net.ipv4.tcp_syncookies=1" >> /etc/sysctl.conf

sysctl -p # exec sysctl.conf enable
# optimizer sshd_config

sed -i "s/#MaxAuthTries 6/MaxAuthTries 6/" /etc/ssh/sshd_config
sed -i  "s/#UseDNS yes/UseDNS no/" /etc/ssh/sshd_config

echo "加固完成"
%end
%post
cat >>/usr/bin/vasp/update_master.sh <<EOF
#!/bin/bash
#往本机/etc/hosts添加hosts文件内容#############
#cat hosts  >> /etc/hosts;
echo "添加hosts到/etc/hosts文件完成";
host_ip=\`/sbin/ifconfig -a|grep inet|grep -v 127.0.0.1|grep -v inet6|awk '{print \$2}'|tr -d "addr:"\`
suffix_ip=\${host_ip%.*}
suffix_ip=\${suffix_ip%.*}
yum -y install mkisofs vim httpd python createrepo perl bind-utils openssh-clients ntp vim wget unzip bind
yum clean all
echo "开始配置ntp..."
chkconfig ntpd on 
echo "
driftfile /var/lib/ntp/drift
restrict default kod nomodify notrap nopeer noquery
restrict -6 default kod nomodify notrap nopeer noquery

restrict 127.0.0.1 
restrict -6 ::1
restrict \$suffix_ip.0.0 mask 255.255.0.0 nomodify notrap

restrict 0.vrv.pool.ntp.org mask 255.255.255.255 nomodify notrap noquery
restrict 1.vrv.pool.ntp.org mask 255.255.255.255 nomodify notrap noquery
restrict 2.vrv.pool.ntp.org mask 255.255.255.255 nomodify notrap noquery
#server 210.72.145.44
#server	192.168.2.11	# local clock
fudge	127.127.1.0 stratum 10	

includefile /etc/ntp/crypto/pw

keys /etc/ntp/keys

" > /etc/ntp.conf
service ntpd restart && echo "ntp 配置完成!"
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc --localtime

# 配置selinux#############
echo "开始配置selinux..."
sed -i 's/enforcing/disabled/' /etc/selinux/config && echo "selinux 配置完成"

# 配置 iptalbes###########
echo "开始配置iptables..."
service iptables stop && chkconfig iptables off && service ip6tables stop && chkconfig ip6tables off && echo "iptables配置完成"

# 关闭 THP################
echo "关闭THP..."
echo "if test -f /sys/kernel/mm/redhat_transparent_hugepage/defrag;then echo never > /sys/kernel/mm/redhat_transparent_hugepage/defrag fi" >> /etc/rc.local && echo "闭THP完成"

echo "更新节点完成"
#安装jdk
echo " jdk 安装中"
rpm -e java-1.6.0-openjdk-1.6.0.38-1.13.10.4.el6.x86_64
rpm -e jdk-1.7.0_80-fcs.x86_64
rpm -e java-1.7.0-openjdk-1.7.0.99-2.6.5.1.el6.x86_64
cd /mnt/vrv/Packages/
rpm -ivh jdk-7u80-linux-x64.rpm
echo " jdk 安装完成"
read -p "install mysql，Please insert y or n ": name
if [ \$name = "n" ]
then
  echo "不需要安装mysql"
elif [ \$name = "y" ]
then
#安装mysql
echo "安装mysql中"
cd /mnt/vrv/Packages/
rpm -e mysql-5.1.73-7.el6.x86_64.rpm --nodeps
rpm -e --nodeps mysql-libs-5.1.73-7.el6.x86_64.rpm
yum remove -y mysql-libs
rm -fr /usr/lib/mysql
rm -fr /usr/include/mysql
rm -f /etc/my.cnf
rm -fr /var/lib/mysql
rpm -ivh MySQL-server-5.5.50-1.linux2.6.x86_64.rpm
rpm -ivh MySQL-client-5.5.50-1.linux2.6.x86_64.rpm
echo never > /sys/kernel/mm/redhat_transparent_hugepage/enabled
service mysql start
echo "安装mysql完成"
echo "初始化mysql"
mysqladmin -uroot password vrv123456.
echo "初始化mysql完成"
echo "增加客户端完成"
touch /etc/my.cnf
echo "
[client]
default-character-set=utf8
[mysqld]
character_set_server=utf8
lower_case_table_names=1
" >> /etc/my.cnf
service mysql restart
fi
EOF

%end
%post
cat >>/usr/bin/vasp/yum-hdp.sh <<EOF
#!/bin/sh
rm -rf /etc/yum.repos.d/*
read -p "Please insert http addr": addr

echo "
[HDP]
name=HDP
baseurl=http://\$addr/HDP
gpgcheck=0
enabled=1
priority=1
" >> /etc/yum.repos.d/hdp.repo

echo "
[HDP-UTILS]
name=HDP-UTILS
baseurl=http://\$addr/HDP-UTILS
gpgcheck=0
enabled=1
priority=1
" >> /etc/yum.repos.d/hdp-utils.repo
echo "请访问 http://\$addr/HDP"
echo "请访问 http://\$addr/HDP-UTILS"

echo "
[vrv-http]
name=vrv-http
baseurl=http://\$addr/centos/Packages/Packages
gpgcheck=0
enabled=1
" >> /etc/yum.repos.d/vrv-http.repo
echo "
[ambari-2.x]
name=Ambari 2.x
baseurl=http://\$addr/ambari/
gpgcheck=0
enabled=1
priority=1
" >> /etc/yum.repos.d/ambari.repo
echo "
[vmp-extend-1.0]
name=vmp-extend-1.0
baseurl=http://\$addr/vmp-extend/
gpgcheck=0
enabled=1
priority=1
" >> /etc/yum.repos.d/ambari.repo

yum clean all
EOF

%end

%post
touch /usr/bin/vasp/miyao.sh
cat >>/usr/bin/vasp/miyao.sh <<EOF
#!/bin/bash
read -p "Please insert client ip": addr
ssh root@\$addr
echo "已添加服务端公钥到客户端:\$addr"
EOF
%end

%post
touch /usr/bin/vasp/change.sh
cat >>/usr/bin/vasp/change.sh <<EOF
#!/bin/sh
echo "VASP 1.1  install script"
echo "1.加固系统  2.安装vasp client 3.修改主机ip地址 4.修改主机名 5.修改网络 6.修改ambari主机地址 7.修改root密码 8.重启网络服务 9.退出"
echo "++++++++自动修改ip和主机名等相关信息+++++++++"
echo "ETHCONF=/etc/sysconfig/network-scripts/ifcfg-eth0"
echo "HOSTS=/etc/hosts"
echo "NETWORK=/etc/sysconfig/network"
echo "DIR=/data/backup/\`date +%Y%m%d\`" 
echo "NETMASK=255.255.255.0"
echo "安装好mysql默认密码为vrv123456."
echo "+++++++++-------------------------+++++++++++"
#Define Path 定义变量，可以根据实际情况修改 
 ETHCONF=/etc/sysconfig/network-scripts/ifcfg-eth0
 HOSTS=/etc/hosts
 NETWORK=/etc/sysconfig/network
 DIR=/data/backup/\`date +%Y%m%d\` 
 NETMASK=255.255.255.0 
  
echo "================================================"
echo
#定义change_ip函数 
function Change_ip () 
{ 
#判断备份目录是否存在，中括号前后都有空格，！叹号在shell表示相反的意思# 
if
 [ ! -d \$DIR ];then
  
 mkdir -p \$DIR 
  
fi
  
 echo "Now Change ip address ,Doing Backup Interface eth0"
 cp \$ETHCONF \$DIR 
  
 grep "dhcp" \$ETHCONF 
#如下$?用来判断上一次操作的状态，为0，表示上一次操作状态正确或者成功# 
if
  
 [ \$? -eq 0 ];then
#read -p 交互输入变量IPADDR，注冒号后有空格，sed -i 修改配置文件# 
 read -p "Please insert ip Address:" IPADDR 
 read -p "Please insert gatway Address:" gateway
 sed -i 's/dhcp/static/g' \$ETHCONF 
#awk -F. 意思是以.号为分隔域，打印前三列# 
 echo -e "IPADDR=\$IPADDR\nNETMASK=\$NETMASK\nGATEWAY=\`echo \$gateway|awk -F. '{print \$1"."\$2"."\$3"."\$4}'\`" >>\$ETHCONF 
 echo "This IP address Change success !"
  
else
  
 echo -n "This \$ETHCONF is static exist ,please ensure Change Yes or NO": 
 read i 
  
fi
  
if
 [ "\$i" == "y" -o "\$i" == "yes" ];then
 read -p "Please insert ip Address:" IPADDR 
 read -p "Please insert gateway Address:" gateway
 count=(\`echo $IPADDR|awk -F. '{print \$1,\$2,\$3,\$4}'\`) 
 #定义数组， ${#count[@]}代表获取变量值总个数# 
 A=\${#count[@]} 
 #while条件语句判断，个数是否正确，不正确循环提示输入，也可以用[0-9]来判断ip# 
while
  
 [ "\$A" -ne "4" ] 
  
do
  
 read -p "Please re Inster ip Address,example 192.168.0.11 ip": IPADDR 
 count=(\`echo \$IPADDR|awk -F. '{print \$1,\$2,\$3,\$4}'\`) 
 A=\${#count[@]}
  
done
 #sed -e 可以连续修改多个参数# 
 sed -i -e 's/^IPADDR/#IPADDR/g' -e 's/^NETMASK/#NETMASK/g' -e 's/^GATEWAY/#GATEWAY/g' \$ETHCONF 
 #echo -e \n为连续追加内容，并自动换行# 
 echo -e "IPADDR=\$IPADDR\nNETMASK=\$NETMASK\nGATEWAY=\`echo \$gateway|awk -F. '{print \$1"."\$2"."\$3"."\$4}'\`" >>\$ETHCONF 
 echo "This IP address Change success !"
else
 echo "This \$ETHCONF static exist,please exit"
 exit \$? 
  
fi
  
} 
  
#定义hosts函数 
############function hosts############## 
function Change_hosts () 
{ 
  
if
  
 [ ! -d \$DIR ];then
 mkdir -p \$DIR 
  
fi
  
 cp \$HOSTS \$DIR 
 read -p "Please insert ip address": IPADDR 
 read -p "Please insert ip hostname": hostname
 host=\`echo \$IPADDR|sed 's/\././g'\` 
 cat \$HOSTS |grep 127.0.0.1 |grep "\$host"
   
if
 [ \$? -ne 0 ];then
# sed -i "s/127.0.0.1/127.0.0.1 \$host/g" \$HOSTS
 echo "\$host \$hostname" >> /etc/hosts
 echo "This hosts change success "
  
else
 echo "This \$host IS Exist .........."
  
fi
  
}
  
###########fuction network############### 
#定义network函数 
function Change_network () 
{ 
 if
  
 [ ! -d \$DIR ];then
 mkdir -p \$DIR 
  
 fi
 cp \$NETWORK \$DIR 
 read -p "Please insert host name": IPADDR 
  
 host=\`echo \$IPADDR|sed 's/\././g'\` 
 grep "\$host" \$NETWORK 
  
 if
 [ \$? -ne 0 ];then
 sed -i "s/^HOSTNAME/#HOSTNAME/g" \$NETWORK 
 echo "HOSTNAME=\$IPADDR" >>\$NETWORK 
  
else
 echo "This \$host IS Exist .........."
  
 fi
  
} 
function Change_rootpassword () 
{
read -p "Please insert you root password": password
echo \$password | passwd --stdin root
}
function restart_server () 
{
echo "restart network server ...."
service network restart
ifup eth0
}
function exit_quit () 
{
echo "quit......"
break
}
function jiagu () 
{
cd /usr/bin/vasp/
sh jiagu.sh >>/usr/bin/vasp/jiagu.log
}

function install_vasp_client () 
{
cd /usr/bin/vasp/
sh create_local_yum.sh && sh update_master.sh >>/usr/bin/vasp/install.vasp_client.log
}

function add_key () 
{
cd /usr/bin/vasp/
sh miyao.sh
}

#PS3一般为菜单提示信息# 
 PS3="Please Select Menu": 
#select为菜单选择命令，格式为select \$var in ..command.. do .... done 
 select i in "jiagu" "install_vasp_client" "Change_ip" "Change_hosts" "Change_network" "Change_rootpassword" "restart_server" "add_key" "exit_quit"
  
do
#case 方式，一般用于多种条件下的判断 
case \$i in
  jiagu ) 
  jiagu 
;;
  install_vasp_client ) 
  install_vasp_client 
;;
  Change_ip ) 
  Change_ip 
;; 
  Change_hosts ) 
  Change_hosts 
;; 
  Change_network ) 
  Change_network 
;; 
  Change_rootpassword ) 
  Change_rootpassword
;; 
  restart_server ) 
  restart_server
;; 
  add_key ) 
  add_key
;; 
  exit_quit ) 
  exit_quit
;; 
  *) 
  echo
  echo "Please Insert \$0: jiagu(1)|install_vasp_client(2)|Change_ip(3)|Change_hosts(4)|Change_network(5)|Change_rootpassword(6)|restart_network_server(7)|add_key(8)|quit(9)|"
  echo "温馨提示：请按8重启网络服务"
  break
;; 
esac 
done
EOF
#echo "vasp OS release 1.1" > /etc/centos-release
#echo "vasp OS release 1.1" > /etc/redhat-release
#sed -i 's/CentOS release 6.8 (Final)/vasp OS release 1.1/g' /etc/issue
#sed -i 's/CentOS release 6.8 (Final)/vasp OS release 1.1/g' /etc/issue.net
#sed -i 's/localhost.localdomain/vasp-manager/g' /etc/sysconfig/network
#sed -i 's/CentOS/vasp1.1/g' /etc/rc.d/rc.sysinit
#sed -i 's/CentOS/vasp1.1/' /etc/grub.conf
#echo "Welcome to vasp 1.1" > /etc/issue
chmod 777 /usr/bin/vasp/*.sh
#reboot 
reboot
%end